<?xml version="1.0" encoding="utf-8"?>
<nvi name="${{PackageId}}" title="${{title}}" version="${{version}}" versionText="${{version}}" timestamp="${{timestamp}}" disposition="demand" hidden="true" installerMin="2.1002.207.1848">
	<strings>
		<string name="PackageId" value="NvContainer"/>
		<string name="title" value="NVIDIA Container"/>
		<string name="version" value="1.2"/>
		<string name="timestamp" value="2017-01-19T16:02:49"/>
		<string name="InstallFolderName" value="NvContainer"/>
		<string name="ContainerBinaryName" value="nvcontainer.exe"/>
		<string name="RootServiceName" value="NvContainerLocalSystem"/>
		<string name="nviName" value="NvContainer.nvi"/>
		<string name="InstallLocationX86" value="${{NvidiaProgramFilesX86}}\${{InstallFolderName}}"/>
		<string name="crashDumpKey" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Windows Error Reporting\LocalDumps"/>
		<string name="serviceStopMaxTimeout" value="30000"/>
	</strings>
	<filter name="32bit" platform="x86"/>
	<filter name="64bit" platform="amd64"/>
	<properties>
		<bool name="FixedInstallLocation" value="true"/>
		<string name="InstallLocation" value="${{NvidiaProgramFiles}}\${{InstallFolderName}}"/>
		<bool name="Install32BitContainer" value="true"/>
		<bool name="NvContainerUnloaded" value="true"/>
		<bool name="GenerateCrashDumps" value="true"/></properties>
	<manifest>
		<file name="${{nviName}}"/>
		<file name="x86\${{ContainerBinaryName}}"/>
		<file name="x86_64\${{ContainerBinaryName}}"/>
	</manifest>
	<phases>
		<exe phase="DeleteRecoveryPolicy" onError="ignore" when="install" timeout="5000" name="${{SystemDirectory}}\sc.exe" dir="${{SystemDirectory}}">
			<arg value="failure"/>
			<arg value="${{RootServiceName}}"/>
			<arg value="reset="/>
			<arg value="10"/>
			<arg value="command="/>
			<arg value=""/>
			<arg value="actions="/>
			<arg value=""/>
		</exe>
		<standard phase="stopNvContainerRootService" onError="ignore" when="install">
			<stopService name="${{RootServiceName}}" timeOut="${{serviceStopMaxTimeout}}"/>
		</standard>
		<exe phase="killNvContainers" name="${{SystemDirectory}}\taskkill.exe" when="install" onError="ignore">
			<arg value="/f /im ${{ContainerBinaryName}}" quote="none"/>
			<success value="0"/>
			<success value="128"/>
		</exe>
		<setPropertyIf phase="checkIfNvContainerUnloaded" boolProperty="NvContainerUnloaded" value="false" when="install">
			<process name="${{ContainerBinaryName}}" check="exists"/>
		</setPropertyIf>
		<confirm phase="Confirm-NvContainerUnload" when="install">
			<propertyTrue name="NvContainerUnloaded"/>
		</confirm>
		<standard phase="createCrashDumpGenerationKeys">
			<addRegistry keyName="${{crashDumpKey}}\${{ContainerBinaryName}}"/>
			<addRegistry keyName="${{crashDumpKey}}\${{ContainerBinaryName}}" valueName="DumpFolder" type="REG_EXPAND_SZ" value="%PROGRAMDATA%\NVIDIA Corporation\CrashDumps"/>
			<addRegistry keyName="${{crashDumpKey}}\${{ContainerBinaryName}}" valueName="DumpCount" type="REG_DWORD" value="15"/>
			<addRegistry keyName="${{crashDumpKey}}\${{ContainerBinaryName}}" valueName="DumpType" type="REG_DWORD" value="1"/>
		</standard>
		<standard phase="createDirectories">
			<createDirectory target="${{NvidiaProgramFiles}}"/>
			<createDirectory target="${{InstallLocation}}"/>
			<createDirectory target="${{NvidiaCommonAppData}}"/>
		</standard>
		<if filter="32bit">
			<standard phase="copyFilesX86">
				<copyFile target="${{InstallLocation}}\${{ContainerBinaryName}}" source="x86\${{ContainerBinaryName}}"/>
			</standard>
		</if>
		<if filter="64bit">
			<standard phase="copyFilesX86" condition="Install32BitContainer">
				<copyFile target="${{InstallLocationX86}}\${{ContainerBinaryName}}" source="x86\${{ContainerBinaryName}}"/>
			</standard>
			<standard phase="copyFilesAMD64">
				<copyFile target="${{InstallLocation}}\${{ContainerBinaryName}}" source="x86_64\${{ContainerBinaryName}}"/>
			</standard>
		</if>
	</phases>
</nvi>
